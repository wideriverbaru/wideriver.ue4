#include "/Engine/Private/Common.ush"

#ifndef EFFECT
    #error EFFECT not defined
#endif

#ifndef PAINT
    #error PAINT not defined
#endif

// These have to match the enums in NoesisGuiShaders.h
#define EFFECT_RGBA                0
#define EFFECT_MASK                1
#define EFFECT_PATH                2
#define EFFECT_PATH_AA             3
#define EFFECT_IMAGE_PAINT_OPACITY 4
#define EFFECT_TEXT                5

#define PAINT_SOLID                0
#define PAINT_LINEAR               1
#define PAINT_RADIAL               2
#define PAINT_PATTERN              3
#define PAINT_NONE                 4

#if EFFECT == EFFECT_RGBA
#elif EFFECT == EFFECT_MASK
#elif EFFECT == EFFECT_PATH
#elif EFFECT == EFFECT_PATH_AA
    #define HAS_COVERAGE 1
#elif EFFECT == EFFECT_IMAGE_PAINT_OPACITY
    #define HAS_UV1 1
#elif EFFECT == EFFECT_TEXT
    #define HAS_UV1 1
#else
    #error Unknown Effect
#endif

#if PAINT == PAINT_SOLID
    #define HAS_COLOR 1
#elif PAINT == PAINT_LINEAR
    #define HAS_UV0 1
#elif PAINT == PAINT_RADIAL
    #define HAS_UV0 1
#elif PAINT == PAINT_PATTERN
    #define HAS_UV0 1
#elif PAINT == PAINT_NONE
#else
    #error Unknown Paint mode
#endif

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#if EFFECT == EFFECT_RGBA
    float4 rgba;
#endif

#if PAINT == PAINT_RADIAL
    float4 radialGrad[2];
#endif

#if (PAINT == PAINT_LINEAR) || (PAINT == PAINT_RADIAL) || (PAINT == PAINT_PATTERN)
    float opacity;
#endif

Texture2D patternTex;
SamplerState patternSampler;

Texture2D rampsTex;
SamplerState rampsSampler;

Texture2D imageTex;
SamplerState imageSampler;

Texture2D glyphsTex;
SamplerState glyphsSampler;

struct In
{
#if HAS_COLOR
    half4 color: COLOR;
#endif

#if HAS_UV0
    half2 uv0: TEXCOORD0;
#endif

#if HAS_UV1
    half2 uv1: TEXCOORD1;
#endif

#if HAS_COVERAGE
    half coverage: TEXCOORD2;
#endif
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
half4 main(in In i): SV_Target0
{
    /////////////////////////////////////////////////////
    // Fetch paint color and opacity
    /////////////////////////////////////////////////////
    #if PAINT == PAINT_SOLID
        half4 paint = i.color;
        half opacity_ = 1.0f;

    #elif PAINT == PAINT_LINEAR
        half4 paint = Texture2DSampleLevel(rampsTex, rampsSampler, i.uv0, 0);
        half opacity_ = opacity;

    #elif PAINT == PAINT_RADIAL
        half dd = radialGrad[1].y * i.uv0.x - radialGrad[1].z * i.uv0.y;
        half u = radialGrad[0].x * i.uv0.x + radialGrad[0].y * i.uv0.y + radialGrad[0].z * 
            sqrt(radialGrad[0].w * i.uv0.x * i.uv0.x + radialGrad[1].x * i.uv0.y * i.uv0.y - dd * dd);
        half4 paint = Texture2DSampleLevel(rampsTex, rampsSampler, half2(u, radialGrad[1].w), 0);
        half opacity_ = opacity;

    #elif PAINT == PAINT_PATTERN
        half4 paint = Texture2DSampleLevel(patternTex, patternSampler, i.uv0, 0);
        half opacity_ = opacity;
    #endif

    /////////////////////////////////////////////////////
    // Apply selected effect
    /////////////////////////////////////////////////////
    #if EFFECT == EFFECT_RGBA
        return rgba;

    #elif EFFECT == EFFECT_MASK
        return half4(1.0f, 1.0f, 1.0f, 1.0f);

    #elif EFFECT == EFFECT_PATH
        return opacity_ * paint;

    #elif EFFECT == EFFECT_PATH_AA
        return (opacity_ * i.coverage) * paint;

    #elif EFFECT == EFFECT_IMAGE_PAINT_OPACITY
        return Texture2DSampleLevel(imageTex, imageSampler, i.uv1, 0) * (opacity_ * paint.a);

    #elif EFFECT == EFFECT_TEXT
        return (Texture2DSampleLevel(glyphsTex, glyphsSampler, i.uv1, 0).r * opacity_) * paint;

    #endif
}